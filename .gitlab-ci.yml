
stages:
  - setup
  - test
  - build
  - publish

variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  CARGO_INCREMENTAL: 0

setup:
  stage: setup
  image: docker:20.10.5
  services:
    - docker:20.10.5-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - tag_src=ci-src-$(sha256sum ci/Dockerfile | awk '{print $1}')
    - docker pull $CI_REGISTRY_IMAGE:$tag_src || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:$tag_src --tag $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:$tag_src ci
    - docker push $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$tag_src
  tags:
    - docker

test:
  stage: test
  image: $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_SHA
  script:
    - cargo test --all --color always
  cache:
    paths:
      - .cargo
  tags:
    - docker

clippy:
  stage: test
  image: $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_SHA
  script:
    - cargo clippy --color always
  cache:
    paths:
      - .cargo
  tags:
    - docker

audit:
  stage: test
  image: $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_SHA
  script:
    - ci/audit.sh --color always
  cache:
    paths:
      - .cargo
  tags:
    - docker

build:
  stage: build
  image: $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_SHA
  script:
    - cargo build --release --color always
    - ci/package.sh
  cache:
    paths:
      - .cargo
  artifacts:
    paths:
      - dist/
    expire_in: 6 months
  tags:
    - docker

upload-s3:
  tags:
    - docker
  stage: publish
  image: docker.git.cornhooves.org/build-tools/deb-s3:latest
  rules:
    - if: "$AWS_SECRET_ACCESS_KEY"
  script:
    - ci/publish-s3.sh
